#--CREAR LA TABLA TEMPORAL QUE VA CONTENER LA INFORMACION DEL EXCEL DIRECTAMENTE
CREATE TABLE TEMPORAL
(
  NOMBRE_ELECCION VARCHAR(30),
  ANIO_ELECCION YEAR(4),
  PAIS VARCHAR(30),
  REGION VARCHAR(30),
  DEPTO VARCHAR(30),
  MUNICIPIO VARCHAR(30),
  PARTIDO VARCHAR(30),
  NOMBRE_PARTIDO VARCHAR(30),
  SEXO VARCHAR(30),
  RAZA VARCHAR(30),
  ANALFABETOS INT,
  ALFABETOS INT,
  SEXO VARCHAR(30),
  RAZA VARCHAR(30),
  PRIMARIA INT,
  NIVEL_MEDIO INT,
  UNIVERSITARIOS INT
);

#--SCRITP PARA LA CARGA DEL ARCHIVO QUE CARGA LA DATA ALA TABLA TEMPORAL
LOAD DATA LOCAL INFILE '/home/richard/Documents/Universidad/Base de Datos/Proyecto1_BD/ER/SQL/ICE-Fuente.csv' INTO TABLE TEMPORAL
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(NOMBRE_ELECCION, ANIO_ELECCION, PAIS, REGION, DEPTO, MUNICIPIO, PARTIDO, NOMBRE_PARTIDO, SEXO1, RAZA1, ANALFABETOS, ALFABETOS, SEXO2, RAZA2, PRIMARIA, NIVEL_MEDIO, UNIVERSITARIOS)

#--CREANDO LA TABLA PAIS
CREATE TABLE PAIS
(
  ID_PAIS INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(30) NOT NULL,
  PRIMARY KEY (ID_PAIS)
);

#--CREANDO LA TABLA PARA SEXO DE LAS PERSONAS
CREATE TABLE SEXO
(
  ID_SEXO INT NOT NULL AUTO_INCREMENT, #--LLAVE PRIMARIA DE LA TABLA DE SEXO
  NOMBRE VARCHAR(30) NOT NULL, #--NOMBRE DEL SEXO EN CUESTION
  PRIMARY KEY (ID_SEXO)
);

#--CREANDO LA TABLA PARA LA ETNIA DE LAS PERSONAS
CREATE TABLE ETNIA
(
  ID_ETNIA INT NOT NULL AUTO_INCREMENT, #--LLAVE PRIMARIA DE LA TABLA DE ETNIAS
  NOMBRE VARCHAR(30) NOT NULL,   #--NOMBRE DE LA ETNIA QUE SE LE DARA EN EL CATALOGO
  PRIMARY KEY (ID_ETNIA)
);

#--TABLAS QUE TIENEN COMO LLAVE FORANEAS LA TABLA DE PAIS
#----------------------------------------------------------
CREATE TABLE REGION
(
  ID_REGION INT NOT NULL AUTO_INCREMENT, #--LLAVE FORANEA PARA LA REGION
  NOMBRE VARCHAR(30) NOT NULL, #--NOMBRE DE CADA UNA DE LAS REGIONES
  ID_PAIS INT NOT NULL,
  PRIMARY KEY(ID_REGION),
  FOREIGN KEY (ID_PAIS) REFERENCES PAIS(ID_PAIS)
  ON DELETE CASCADE
);
#---------------------------------------------------------
CREATE TABLE ELECCION
(
  ID_ELECCION INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(30) NOT NULL,
  ANIO YEAR(4) NOT NULL,
  ID_PAIS INT NOT NULL,
  PRIMARY KEY (ID_ELECCION),
  FOREIGN KEY (ID_PAIS) REFERENCES PAIS(ID_PAIS)
  ON DELETE CASCADE
);
#---------------------------------------------------------
CREATE TABLE PARTIDO
(
  ID_PARTIDO INT NOT NULL AUTO_INCREMENT, #--LLAVE DEL PARTIDO
  NOMBRE VARCHAR(30) NOT NULL, #--NOMBRE DEL PARTIDO
  INICIALES VARCHAR(20) NOT NULL, #--INICIALES DEL PARTIDO
  ID_PAIS INT NOT NULL,
  PRIMARY KEY (ID_PARTIDO),
  FOREIGN KEY (ID_PAIS) REFERENCES PAIS(ID_PAIS)
  ON DELETE CASCADE
);

#--TABLAS QUE DEPENDEN DE REGION
CREATE TABLE DEPARTAMENTO
(
  ID_DEPARTAMENTO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(30) NOT NULL,
  ID_REGION INT NOT NULL,
  PRIMARY KEY(ID_DEPARTAMENTO),
  FOREIGN KEY(ID_REGION) REFERENCES REGION(ID_REGION)
  ON DELETE CASCADE
);

#--TABLAS QUE DEPENDEN DE DEPARTAMENTO
CREATE TABLE MUNICIPIO
(
  ID_MUNICIPIO INT NOT NULL AUTO_INCREMENT,
  NOMBRE VARCHAR(30) NOT NULL,
  ID_DEPARTAMENTO INT NOT NULL,
  PRIMARY KEY (ID_MUNICIPIO),
  FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO(ID_DEPARTAMENTO)
  ON DELETE CASCADE
);

#--TABLA DE DETALLES DONDE SE ALMACENAN TODOS LOS DATOS CORRESPONDIENTES
CREATE TABLE DETALLES_VOTOS
(
  ID_ELECCION INT NOT NULL,
  ID_MUNICIPIO INT NOT NULL,
  ID_PARTIDO INT NOT NULL,
  ID_SEXO INT NOT NULL,
  ID_ETNIA INT NOT NULL,
  TOTAL_N_PRIMARIO INT NOT NULL,
  TOTAL_N_MEDIO INT NOT NULL,
  TOTAL_N_UNIV INT NOT NULL,
  TOTAL_N_NAC INT NOT NULL,
  PRIMARY KEY(ID_ELECCION, ID_MUNICIPIO, ID_PARTIDO, ID_SEXO, ID_ETNIA),
  FOREIGN KEY(ID_ELECCION) REFERENCES ELECCION(ID_ELECCION) ON DELETE CASCADE,
  FOREIGN KEY(ID_MUNICIPIO) REFERENCES MUNICIPIO(ID_MUNICIPIO) ON DELETE CASCADE,
  FOREIGN KEY(ID_PARTIDO) REFERENCES PARTIDO(ID_PARTIDO) ON DELETE CASCADE,
  FOREIGN KEY(ID_SEXO) REFERENCES SEXO(ID_SEXO) ON DELETE CASCADE,
  FOREIGN KEY(ID_ETNIA) REFERENCES ETNIA(ID_ETNIA) ON DELETE CASCADE
);
CREATE TABLE USUARIO
(
    ID_USUARIO INT NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL UNIQUE,
    PASSW VARCHAR(30) NOT NULL,
    PRIMARY KEY(ID_USUARIO)
);
